#!/usr/bin/env python

from dynamic_reconfigure.parameter_generator_catkin import *

PACKAGE = "delegation_module"

gen = ParameterGenerator()

# DelegationManager parameters
gen.add("max_consecutive_timeouts",     int_t, 0, "maximum consecutive timeouts for an agent before believed dead",         2,  1,  10000)
gen.add("max_consecutive_tries",        int_t, 0, "maximum consecutive tries to end the auction before new CFP",            10, 1,  10000)
gen.add("max_delegation_depth",         int_t, 0, "maxmimum depth for a delegation",                                        5,  -1, 10000)
gen.add("auction_steps",                int_t, 0, "steps waited for proposals after CFP before closing the auction",        1,  1,  10000)
gen.add("max_tasks",                    int_t, 0, "maximum number of simultanious tasks",                                   10, -1, 10000)
gen.add("reply_impossible_proposals",   bool_t, 0, "reply proposals as well for impossible plans",                          False)

# CostEvaluator parameters
gen.add("task_utilization_factor",      double_t, 0, "task_utilization_factor for the cost function",       1.0,    -1, 2)
gen.add("workload_proportion_factor",   double_t, 0, "workload_proportion_factor for the cost function",    -0.025, -1, 2)
gen.add("additional_workload_factor",   double_t, 0, "additional_workload_factor for the cost function",    1.0,    -1, 2)
gen.add("additional_delegation_factor", double_t, 0, "additional_delegation_factor for the cost function",  1.0,    -1, 2)
gen.add("cooperation_amount_factor",    double_t, 0, "cooperation_amount_factor for the cost function",     1.0,    -1, 2)
gen.add("contractor_number_factor",     double_t, 0, "contractor_number_factor for the cost function",      0.1,    -1, 2)

exit(gen.generate(PACKAGE, "dynamic_delegation_manager_conf", "DelegationManager"))